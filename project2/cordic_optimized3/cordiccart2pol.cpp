#include "cordiccart2pol.h"
#include <stdio.h>


const data_t Kvalues[NO_ITER] = {1,	0.500000000000000,	0.250000000000000,	0.125000000000000,	0.0625000000000000,	0.0312500000000000,	0.0156250000000000,	0.00781250000000000,	0.00390625000000000,	0.00195312500000000,	0.000976562500000000,	0.000488281250000000,	0.000244140625000000,	0.000122070312500000,	6.10351562500000e-05,	3.05175781250000e-05};

const data_t angles[NO_ITER] = {0.785398163397448,	0.463647609000806,	0.244978663126864,	0.124354994546761,	0.0624188099959574,	0.0312398334302683,	0.0156237286204768,	0.00781234106010111,	0.00390623013196697,	0.00195312251647882,	0.000976562189559320,	0.000488281211194898,	0.000244140620149362,	0.000122070311893670,	6.10351561742088e-05,	3.05175781155261e-05};

const data_t pi = 3.1415926535897932;

void cordiccart2pol(data_t x, data_t y, data_t * r,  data_t * theta)
{
//#pragma HLS PIPELINE

	data_t temp;
	*theta = 0;

	if (x < 0)
	{
		temp = x;
		x = (y > 0) ? y : (data_t)-y;
		y = (y > 0) ? (data_t)-temp : temp;
		*theta = (y > 0) ? *theta + (pi/2) : *theta - (pi/2);
	}

	ap_uint<5> i;

	for (i = 0; i < NO_ITER; i++)
	{
		temp = x;

		*theta += (y > 0) ? angles[i] : (data_t)(-angles[i]);
		x += (y > 0) ? (y>>i) : (data_t)-(y>>i);
		y += (y > 0) ? (data_t)-(temp>>i) : (temp>>i);
	}

	*r  = x * (data_t)0.6072529350088812561694;
}
